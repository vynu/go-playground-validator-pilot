//go:build ignore
// +build ignore

// Package models contains {{.ServiceName}}-specific models with comprehensive validation rules.
// This module defines all {{.ServiceName}}-specific data structures for {{.DataType}} validation.
//
// NOTE: This is a template file - replace {{.ServiceName}} and other template variables with actual values.

package models

import (
	"time"
)

// {{.MainStructName}} represents the top-level {{.ServiceName}} {{.DataType}} structure.
// This is the main entry point for validation and contains all required fields
// that {{.ServiceName}} sends in {{.EventType}} events.
type {{.MainStructName}} struct {
	// Core identification fields
	ID        string    `json:"id" validate:"required,min=1,max=255"`
	Type      string    `json:"type" validate:"required,oneof={{.ValidTypes}}"`
	Timestamp time.Time `json:"timestamp" validate:"required"`
	Source    string    `json:"source" validate:"required,url"`

	// Service-specific fields (customize based on your needs)
	{{range .CustomFields}}
	{{.Name}} {{.Type}} `json:"{{.JSONTag}}" validate:"{{.ValidationRules}}"`{{end}}

	// Common metadata fields
	Metadata    map[string]interface{} `json:"metadata" validate:"omitempty"`
	Tags        []string               `json:"tags" validate:"omitempty,dive,min=1,max=50"`
	Version     string                 `json:"version" validate:"omitempty,semver"`
	Status      string                 `json:"status" validate:"omitempty,oneof=active inactive pending archived"`
}

{{range .AdditionalStructs}}
// {{.Name}} represents {{.Description}}.
type {{.Name}} struct {
	{{range .Fields}}
	{{.Name}} {{.Type}} `json:"{{.JSONTag}}" validate:"{{.ValidationRules}}"`{{end}}
}
{{end}}

// Example usage and documentation:
//
// To use this model in your validation system:
//
// 1. Import this package: import "./models"
// 2. Create a validator: validator := validations.New{{.ServiceName}}Validator()
// 3. Validate payload: result := validator.ValidatePayload(payload)
//
// Example payload structure:
// {
//   "id": "{{.ExampleID}}",
//   "type": "{{.ExampleType}}",
//   "timestamp": "2023-01-01T00:00:00Z",
//   "source": "{{.ExampleSource}}",
//   {{range .ExampleFields}}
//   "{{.JSONTag}}": {{.ExampleValue}},{{end}}
//   "metadata": {},
//   "tags": ["{{.ExampleTag}}"],
//   "version": "1.0.0",
//   "status": "active"
// }
//
// Validation Rules Applied:
// {{range .ValidationRulesDoc}}
// - {{.Field}}: {{.Description}}{{end}}
//
// Business Logic Validations:
// {{range .BusinessLogicDoc}}
// - {{.Name}}: {{.Description}}{{end}}